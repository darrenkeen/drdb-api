# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AuthInput {
  email: String!
  password: String!
}

type BaseTableEntity {
  createdAt: String
  updatedAt: String
}

type FieldError {
  path: String!
  message: String!
}

type Mutation {
  register(input: RegisterInput!): UserResponse!
  login(input: AuthInput!): UserResponse!
  logout: Boolean!
  invalidateTokens: Boolean!
  createResource(options: ResourceInput!): Resource!
  updateResource(input: ResourceUpdateInput!, id: Int!): Boolean!
  deleteResource(id: Int!): Boolean!
  newResourceView(options: ResourceViewInput!): Boolean!
  createResourceRating(options: ResourceRatingInput!): Boolean!
  createUserRole(options: UserRoleInput!): UserRole!
  deleteUserRole(id: Int!): Boolean!
  createUserFavourite(options: UserFavouriteInput!): UserFavourite!
  updateUserProfile(input: updateUserProfileInput!, id: Int!): Boolean!
  updateUsersRoles(input: updateUserRolesInput!, id: Int!): Boolean!
}

type Query {
  me: User
  resources: [Resource!]!
  resourceViews: [ResourceViews!]!
  resourceRatings(resourceId: Int, userId: Int): [ResourceRating!]!
  userRoles: [UserRole!]!
  userFavourite: [UserFavourite!]!
}

input RegisterInput {
  email: String!
  password: String!
  first_name: String!
  last_name: String!
}

type Resource {
  createdAt: String
  updatedAt: String
  id: Int!
  title: String!
  small_description: String!
  description: String!
  length: Int
  author: String!
  author_url: String
  external_url: String!
  added_by: User!
  views: ResourceViews
  cost: String!
  type: String!
  level: String!
}

input ResourceInput {
  title: String!
  minutes: Int!
  languages: [String!]!
  small_description: String!
  description: String!
  length: Int
  author: String
  author_url: String
  external_url: String!
  cost: String!
  type: String!
  level: String!
}

type ResourceRating {
  createdAt: String
  updatedAt: String
  id: Int!
  user: User!
  resource: Resource!
  rating: Int!
  text: String!
}

input ResourceRatingInput {
  resourceId: Int!
  text: String!
  rating: Int!
}

input ResourceUpdateInput {
  title: String
  minutes: Int
  languages: [String!]
}

input ResourceViewInput {
  resourceId: Int!
}

# Views for a single resource
type ResourceViews {
  createdAt: String
  updatedAt: String
  id: Int!
  total: Int
  resource: Resource!
}

input updateUserProfileInput {
  avatar: String
  dob: String
  marketing_preference: Boolean
  marketing_method_preference: String
}

input updateUserRolesInput {
  roles: [Int!]!
}

# User model
type User {
  createdAt: String
  updatedAt: String
  id: Float!
  first_name: String!
  last_name: String!
  email: String!
  roles: [String!]!

  # Attached profile of user
  profile: UserProfile!
}

type UserFavourite {
  createdAt: String
  updatedAt: String
  id: Float!
  user: User!
  resource: Resource!
}

input UserFavouriteInput {
  resourceId: Int!
}

type UserProfile {
  createdAt: String
  updatedAt: String
  id: Float!
  avatar: String
  dob: String
  marketing_preference: Boolean!
  marketing_method_preference: String
}

type UserResponse {
  user: User
  errors: [FieldError!]
}

type UserRole {
  createdAt: String
  updatedAt: String
  id: Float!
  shortCode: String!
  title: String!
}

input UserRoleInput {
  shortCode: String!
  title: String!
}
